// Code generated by go-swagger; DO NOT EDIT.

package todo

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/laincloud/todomvc/gen/models"
)

// ListTodosOKCode is the HTTP code returned for type ListTodosOK
const ListTodosOKCode int = 200

/*ListTodosOK The todo list

swagger:response listTodosOK
*/
type ListTodosOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Todo `json:"body,omitempty"`
}

// NewListTodosOK creates ListTodosOK with default headers values
func NewListTodosOK() *ListTodosOK {
	return &ListTodosOK{}
}

// WithPayload adds the payload to the list todos o k response
func (o *ListTodosOK) WithPayload(payload []*models.Todo) *ListTodosOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list todos o k response
func (o *ListTodosOK) SetPayload(payload []*models.Todo) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListTodosOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make([]*models.Todo, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*ListTodosDefault Error

swagger:response listTodosDefault
*/
type ListTodosDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListTodosDefault creates ListTodosDefault with default headers values
func NewListTodosDefault(code int) *ListTodosDefault {
	if code <= 0 {
		code = 500
	}

	return &ListTodosDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the list todos default response
func (o *ListTodosDefault) WithStatusCode(code int) *ListTodosDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the list todos default response
func (o *ListTodosDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the list todos default response
func (o *ListTodosDefault) WithPayload(payload *models.Error) *ListTodosDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list todos default response
func (o *ListTodosDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListTodosDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
